{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Login\",\n\n  data() {\n    return {\n      //验证码图片base64编码字符串\n      captchaImg: \"\",\n      //登录的用户信息对象\n      loginForm: {\n        username: \"\",\n        password: \"\",\n        key: \"\",\n        captchaCode: \"\"\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: \"请输入用户名\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }],\n        captchaCode: [{\n          required: true,\n          message: \"请输入验证码\",\n          trigger: \"blur\"\n        }, {\n          min: 5,\n          max: 5,\n          message: \"验证码长度必须为5个字符\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n\n  methods: {\n    //点击验证码，刷新验证码的图片\n    //    getChaptcha() {\n    //       this.$axios.get(\"/captcha\").then((response) => {\n    //          console.log(\"返回的验证码信息:\", response);\n    //          console.log(response.data);\n    //          this.loginForm.key = response.data.data.key;\n    //          this.captchaImg = response.data.data.captchaImg;\n    //       });\n    //    },\n    //提交登录表单方法  formName传递过来 loginForm   this.$refs[formName]获得ref='loginForm'这个元素\n    SubmitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.$axios.post(\"/login?\" + this.$qs.stringify(this.loginForm)) //  http://localhost/login?username=XXX&password=XXX\n          .then(response => {\n            console.log(response.data); //token通过response的头信息返回的   key:value   token:'yeqwuyeuiwqyuieywqiueyiuqwyeiwqyeui'\n\n            console.log(response.headers);\n            const jwt = response.headers[\"token\"]; //响应的token的数据只能在Java服务器端实现\n            //const jwt = 'yeqwuyeuiwqyuieywqiueyiuqwyeiwqyeui' //因为无法写回reponse响应头，手动书写一个token\n            //获得jwt存储Vuex中 使用commit调用mutations中的存储token的方法SET_TOKEN\n\n            this.$store.commit(\"SET_TOKEN\", jwt);\n            this.$router.push(\"/\");\n          });\n        } else {\n          this.getChaptcha();\n          console.log(\"登录提交失败\");\n          return false;\n        }\n      });\n    }\n\n  },\n\n  created() {//    this.getChaptcha(); //生命周期方法 调用获得验证码\n  }\n\n};","map":{"version":3,"mappings":";AAiEA;EACAA,aADA;;EAEAC;IACA;MACA;MACAC,cAFA;MAGA;MACAC;QACAC,YADA;QAEAC,YAFA;QAGAC,OAHA;QAIAC;MAJA,CAJA;MAUAC;QACAJ,WACA;UAAAK;UAAAC;UAAAC;QAAA,CADA,CADA;QAIAN,WACA;UAAAI;UAAAC;UAAAC;QAAA,CADA,CAJA;QAOAJ,cACA;UAAAE;UAAAC;UAAAC;QAAA,CADA,EAEA;UACAC,MADA;UAEAC,MAFA;UAGAH,uBAHA;UAIAC;QAJA,CAFA;MAPA;IAVA;EA4BA,CA/BA;;EAgCAG;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC;MACA;QACA;UACA,YACAC,IADA,CACA,8CADA,EACA;UADA,CAEAC,IAFA,CAEAC;YACAC,2BADA,CAEA;;YACAA;YACA,sCAJA,CAIA;YAEA;YAEA;;YACA;YAEA;UACA,CAdA;QAeA,CAhBA,MAgBA;UACA;UACAA;UACA;QACA;MACA,CAtBA;IAuBA;;EAnCA,CAhCA;;EAqEAC,WACA;EACA;;AAvEA","names":["name","data","captchaImg","loginForm","username","password","key","captchaCode","rules","required","message","trigger","min","max","methods","SubmitForm","post","then","response","console","created"],"sourceRoot":"src/views","sources":["Login.vue"],"sourcesContent":["<template>\r\n    <el-row>\r\n       <el-col :xl=\"6\" :lg=\"7\">\r\n          <div class=\"login-form\">\r\n             <h2>欢迎使用VueAdmin后台管理系统</h2>\r\n             <el-image\r\n                style=\"width: 130px; height: 130px\"\r\n                :src=\"require('@/assets/logo.jpg')\"\r\n             ></el-image>\r\n             <p>科文学院毕业设计</p>\r\n             <p>Vue+SpringBoot后台权限管理系统V1.0</p>\r\n          </div>\r\n       </el-col>\r\n       <el-col :span=\"1\">\r\n          <el-divider direction=\"vertical\"></el-divider>\r\n       </el-col>\r\n       <el-col :xl=\"6\" :lg=\"7\">\r\n          <!-- ref=\"loginForm\"就相当于  id=\"loginForm\"  -->\r\n          <el-form\r\n             :model=\"loginForm\"\r\n             label-position=\"right\"\r\n             :rules=\"rules\"\r\n             label-width=\"80px\"\r\n             ref=\"loginForm\"\r\n          >\r\n             <el-form-item label=\"用户名\" style=\"width: 380px\" prop=\"username\">\r\n                <el-input v-model=\"loginForm.username\"></el-input>\r\n             </el-form-item>\r\n \r\n             <el-form-item label=\"密码\" style=\"width: 380px\" prop=\"password\">\r\n                <el-input\r\n                   type=\"password\"\r\n                   v-model=\"loginForm.password\"\r\n                ></el-input>\r\n             </el-form-item>\r\n \r\n             <el-form-item\r\n                label=\"验证码\"\r\n                style=\"width: 380px\"\r\n                prop=\"captchaCode\"\r\n             >\r\n                <el-input\r\n                   v-model=\"loginForm.captchaCode\"\r\n                   maxlength=\"5\"\r\n                   style=\"width: 170px; float: left\"\r\n                ></el-input>\r\n                <el-image\r\n                   class=\"captchaImg\"\r\n                   :src=\"captchaImg\"\r\n                   @click=\"getChaptcha()\"\r\n                ></el-image>\r\n             </el-form-item>\r\n \r\n             <el-form-item>\r\n                <el-button type=\"primary\" @click=\"SubmitForm('loginForm')\"\r\n                   >登录</el-button\r\n                >\r\n                <el-button>取消</el-button>\r\n             </el-form-item>\r\n          </el-form>\r\n       </el-col>\r\n    </el-row>\r\n </template>\r\n \r\n <script type=\"text/javascript\">\r\n export default {\r\n    name: \"Login\",\r\n    data() {\r\n       return {\r\n          //验证码图片base64编码字符串\r\n          captchaImg: \"\",\r\n          //登录的用户信息对象\r\n          loginForm: {\r\n             username: \"\",\r\n             password: \"\",\r\n             key: \"\",\r\n             captchaCode: \"\",\r\n          },\r\n          rules: {\r\n             username: [\r\n                { required: true, message: \"请输入用户名\", trigger: \"blur\" },\r\n             ],\r\n             password: [\r\n                { required: true, message: \"请输入密码\", trigger: \"blur\" },\r\n             ],\r\n             captchaCode: [\r\n                { required: true, message: \"请输入验证码\", trigger: \"blur\" },\r\n                {\r\n                   min: 5,\r\n                   max: 5,\r\n                   message: \"验证码长度必须为5个字符\",\r\n                   trigger: \"blur\",\r\n                },\r\n             ],\r\n          },\r\n       };\r\n    },\r\n    methods: {\r\n       //点击验证码，刷新验证码的图片\r\n    //    getChaptcha() {\r\n    //       this.$axios.get(\"/captcha\").then((response) => {\r\n    //          console.log(\"返回的验证码信息:\", response);\r\n    //          console.log(response.data);\r\n    //          this.loginForm.key = response.data.data.key;\r\n    //          this.captchaImg = response.data.data.captchaImg;\r\n    //       });\r\n    //    },\r\n       //提交登录表单方法  formName传递过来 loginForm   this.$refs[formName]获得ref='loginForm'这个元素\r\n       SubmitForm(formName) {\r\n          this.$refs[formName].validate((valid) => {\r\n             if (valid) {\r\n                this.$axios\r\n                   .post(\"/login?\" + this.$qs.stringify(this.loginForm)) //  http://localhost/login?username=XXX&password=XXX\r\n                   .then((response) => {\r\n                      console.log(response.data);\r\n                      //token通过response的头信息返回的   key:value   token:'yeqwuyeuiwqyuieywqiueyiuqwyeiwqyeui'\r\n                      console.log(response.headers);\r\n                      const jwt = response.headers[\"token\"]; //响应的token的数据只能在Java服务器端实现\r\n \r\n                      //const jwt = 'yeqwuyeuiwqyuieywqiueyiuqwyeiwqyeui' //因为无法写回reponse响应头，手动书写一个token\r\n \r\n                      //获得jwt存储Vuex中 使用commit调用mutations中的存储token的方法SET_TOKEN\r\n                      this.$store.commit(\"SET_TOKEN\", jwt);\r\n \r\n                      this.$router.push(\"/\");\r\n                   });\r\n             } else {\r\n                this.getChaptcha();\r\n                console.log(\"登录提交失败\");\r\n                return false;\r\n             }\r\n          });\r\n       },\r\n    },\r\n    created() {\r\n    //    this.getChaptcha(); //生命周期方法 调用获得验证码\r\n    },\r\n };\r\n </script>\r\n \r\n <style scoped>\r\n .el-row {\r\n    background: #fafafa;\r\n    height: 100%;\r\n \r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n }\r\n .el-divider {\r\n    height: 200px;\r\n }\r\n \r\n .codeImg {\r\n    float: left;\r\n    width: 100px;\r\n    height: 40px;\r\n    margin-left: 8px;\r\n    border-radius: 4px;\r\n }\r\n </style>\r\n "]},"metadata":{},"sourceType":"module"}