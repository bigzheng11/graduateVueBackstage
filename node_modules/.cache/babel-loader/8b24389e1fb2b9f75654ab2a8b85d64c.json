{"ast":null,"code":"export default {\n  data() {\n    return {\n      tableData: [],\n      search: \"\",\n      // 默认显示第几页\n      currentPage: 1,\n      // 当前页码\n      total: 20,\n      // 总条数\n      pageSize: 6,\n      // 每页的数据条数\n      //抽屉\n      table: false,\n      dialog: false,\n      loading: false,\n      formLabelWidth: \"80px\",\n      timer: null,\n      deleteTag: false,\n      //新信息\n      newData: {\n        userID: \"\",\n        userName: \"\",\n        time: \"\",\n        userImg: \"\",\n        userSex: \"\",\n        deleteTag: \"\"\n      },\n      // 分类信息表单\n      value: \"\"\n    };\n  },\n\n  created() {\n    // 获取所有用户信息\n    this.$axios.get(\"/api/user/backstageselectall\").then(response => {\n      this.tableData = response.data;\n      console.log(\"首先获取的信息-->\", this.tableData);\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n\n  methods: {\n    //商品种类选择方法\n    handleChange(value) {\n      console.log(value[0]);\n    },\n\n    // 抽屉方法\n    handleClose(done) {\n      if (this.loading) {\n        return;\n      }\n\n      this.$confirm(\"确定要提交表单吗？\").then(_ => {\n        this.loading = true; //goodsClassify的数据类型进行修改\n        // if (typeof this.newData.goodsClassify === \"object\") {\n        //    console.log(\"判断为对象\");\n        //    this.newData.goodsClassify = this.newData.goodsClassify[0];\n        // }\n        // if (this.newData.deleteTag) {\n        //    this.newData.deleteTag = \"1\";\n        // } else {\n        //    this.newData.deleteTag = \"0\";\n        // }\n        //更新用户信息\n\n        this.$axios({\n          url: \"/api/goods/backstageUpdataById\",\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          data: this.newData\n        }).then(respanse => {\n          console.log(\"更新用户信息结果:--->\", respanse);\n\n          if (respanse.data == 1) {\n            console.log(\"更新成功\"); // this.$route.go(0);\n          }\n        });\n        console.log(\"发送请求\");\n        this.timer = setTimeout(() => {\n          done(); // 动画关闭需要一定的时间\n\n          setTimeout(() => {\n            this.loading = false;\n          }, 400);\n        }, 2000);\n      }).catch(_ => {});\n    },\n\n    cancelForm() {\n      this.loading = false;\n      this.dialog = false;\n      clearTimeout(this.timer);\n    },\n\n    // 消息提示\n    open2(message) {\n      this.$message({\n        message: message,\n        type: \"success\"\n      });\n    },\n\n    // 弹窗\n    open() {\n      this.$confirm(\"此操作将永久删除, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        this.$message({\n          type: \"success\",\n          message: \"删除成功!\"\n        });\n      }).catch(() => {\n        this.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n\n    handleSizeChange(val) {\n      console.log(`每页 ${val} 条`);\n      this.currentPage = 1;\n      this.pageSize = val;\n    },\n\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`);\n      this.currentPage = val;\n    },\n\n    // 显示第几页\n    // handleCurrentChange(val) {\n    //    console.log(`当前页: ${val}`);\n    // },\n    //编辑操作\n    handleEdit(index, row) {\n      this.dialog = true; // this.$router.push({\n      //    path: \"/index/GoodsDetail\",\n      //    query: { goodsID: row.goodsID },\n      // });\n\n      console.log(\"编辑---\", index, row);\n      this.newData.userID = row.userID;\n      this.newData.userName = row.userName;\n      this.newData.time = row.time;\n      this.newData.userImg = row.userImg;\n      this.newData.userSex = row.userSex;\n\n      if (row.deleteTag == 1) {\n        this.newData.deleteTag = true;\n      } else {\n        this.newData.deleteTag = false;\n      }\n    },\n\n    //删除操作--------------------------------------\n    async handleDelete(index, row) {\n      console.log(\"======删除=======\");\n      console.log(index);\n      console.log(row.goodsID);\n      console.log(\"======删除=======\");\n      const resultConfirm = await this.$confirm(\"此操作将修改deleteTag标签为删除,是否继续?\", \"删除--deleteTag\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).catch(err => err); // 如果点击的是 确定则resultConfirm 返回的是confirm\n      // 否则点击其他的都是返回cancel\n\n      console.log(resultConfirm);\n\n      if (resultConfirm !== \"confirm\") {\n        // 取消\n        return this.$message.info(\"取消删除\");\n      } else {\n        this.$axios.get(\"/api/goods/backstageDeleteById/\" + row.goodsID).then(response => {\n          if (response.data == 1) {\n            // 删除成功\n            this.open2(\"删除成功\");\n\n            for (const item of this.tableData) {\n              if (item.goodsID == row.goodsID) {\n                console.log(item.goodsID);\n                item.deleteTag = false;\n              }\n            }\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    } // handleDelete(index, row) {\n    //    let test = this.open();\n    //    console.log(test);\n    //    console.log(index, row);\n    // },\n\n\n  }\n};","map":{"version":3,"mappings":"AAmHA;EACAA;IACA;MACAC,aADA;MAEAC,UAFA;MAGA;MACAC,cAJA;MAIA;MACAC,SALA;MAKA;MACAC,WANA;MAMA;MAEA;MACAC,YATA;MAUAC,aAVA;MAWAC,cAXA;MAYAC,sBAZA;MAaAC,WAbA;MAcAC,gBAdA;MAgBA;MACAC;QACAC,UADA;QAEAC,YAFA;QAGAC,QAHA;QAIAC,WAJA;QAKAC,WALA;QAMAN;MANA,CAjBA;MA0BA;MACAO;IA3BA;EA6BA,CA/BA;;EAgCAC;IACA;IACA,YACAC,GADA,CACA,8BADA,EAEAC,IAFA,CAEAC;MACA;MACAC;IACA,CALA,EAMAC,KANA,CAMAC;MACAF;IACA,CARA;EASA,CA3CA;;EA6CAG;IACA;IACAC;MACAJ;IACA,CAJA;;IAMA;IACAK;MACA;QACA;MACA;;MACA,2BACAP,IADA,CACAQ;QACA,oBADA,CAGA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA;;QACA;UACAC,qCADA;UAEAC,cAFA;UAGAC;YACA;UADA,CAHA;UAMAhC;QANA,GAOAqB,IAPA,CAOAY;UACAV;;UACA;YACAA,oBADA,CAEA;UACA;QACA,CAbA;QAeAA;QACA;UACAW,OADA,CAEA;;UACAC;YACA;UACA,CAFA,EAEA,GAFA;QAGA,CANA,EAMA,IANA;MAOA,CAvCA,EAwCAX,KAxCA,CAwCAK,OAxCA;IAyCA,CApDA;;IAqDAO;MACA;MACA;MACAC;IACA,CAzDA;;IA2DA;IACAC;MACA;QACAC,gBADA;QAEAC;MAFA;IAIA,CAjEA;;IAmEA;IACAC;MACA;QACAC,uBADA;QAEAC,sBAFA;QAGAH;MAHA,GAKAnB,IALA,CAKA;QACA;UACAmB,eADA;UAEAD;QAFA;MAIA,CAVA,EAWAf,KAXA,CAWA;QACA;UACAgB,YADA;UAEAD;QAFA;MAIA,CAhBA;IAiBA,CAtFA;;IAwFAK;MACArB;MACA;MACA;IACA,CA5FA;;IA6FAsB;MACAtB;MACA;IACA,CAhGA;;IAkGA;IACA;IACA;IACA;IAEA;IACAuB;MACA,mBADA,CAEA;MACA;MACA;MACA;;MACAvB;MAEA;MACA;MACA;MACA;MACA;;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA;IACA,CA1HA;;IA4HA;IACA;MACAA;MACAA;MACAA;MACAA;MACA,0CACA,4BADA,EAEA,eAFA,EAGA;QACAmB,uBADA;QAEAC,sBAFA;QAGAH;MAHA,CAHA,EAQAhB,KARA,CAQAuB,UARA,EALA,CAcA;MACA;;MACAxB;;MACA;QACA;QACA;MACA,CAHA,MAGA;QACA,YACAH,GADA,CACA,+CADA,EAEAC,IAFA,CAEAC;UACA;YACA;YACA;;YACA;cACA;gBACAC;gBACAyB;cACA;YACA;UACA;QACA,CAbA,EAcAxB,KAdA,CAcAC;UACAF;QACA,CAhBA;MAiBA;IACA,CApKA,CAsKA;IACA;IACA;IAEA;IACA;;;EA3KA;AA7CA","names":["data","tableData","search","currentPage","total","pageSize","table","dialog","loading","formLabelWidth","timer","deleteTag","newData","userID","userName","time","userImg","userSex","value","created","get","then","response","console","catch","error","methods","handleChange","handleClose","_","url","method","headers","respanse","done","setTimeout","cancelForm","clearTimeout","open2","message","type","open","confirmButtonText","cancelButtonText","handleSizeChange","handleCurrentChange","handleEdit","err","item"],"sourceRoot":"src/views/user","sources":["UserList.vue"],"sourcesContent":["<!-- 用户管理组件 -->\r\n<template>\r\n   <div class=\"goodsList\">\r\n      <el-table\r\n         :data=\"\r\n            tableData\r\n               .slice((currentPage - 1) * pageSize, currentPage * pageSize)\r\n               .filter(\r\n                  (data) =>\r\n                     !search ||\r\n                     data.goodsName.toLowerCase().includes(search.toLowerCase())\r\n               )\r\n         \"\r\n         style=\"width: 100%\"\r\n         :row-style=\"{ height: '90px' }\">\r\n         </el-table-column>\r\n         <el-table-column label=\"用户ID\" prop=\"userID\"> </el-table-column>\r\n         <el-table-column label=\"用户名\" prop=\"userName\">\r\n            \r\n         </el-table-column>\r\n         <el-table-column label=\"注册时间\" prop=\"date\"> </el-table-column>\r\n         <el-table-column label=\"性别\" prop=\"userSex\"> </el-table-column>\r\n         <el-table-column label=\"是否删除\" prop=\"deleteTag\"><template slot-scope=\"scope\" width=\"100\">\r\n               <p v-show=\"scope.row.deleteTag\">{{scope.row.deleteTag?\"保留\":\"已经删除\"}}</p>\r\n               <el-tag type=\"danger\" v-if=\"!scope.row.deleteTag\" disable-transitions=\"false\">{{scope.row.deleteTag?\"未删\":\"已经删除\"}}</el-tag>\r\n            </template> \r\n         </el-table-column>\r\n\r\n         <!-- 搜索部分&&操作部分 ↓↓ -->\r\n         <el-table-column align=\"right\" >\r\n            <template slot=\"header\" slot-scope=\"scope\">\r\n               <el-input\r\n                  v-model=\"search\"\r\n                  size=\"mini\"\r\n                  placeholder=\"进行本页搜索\"\r\n               />\r\n            </template>\r\n            <template slot-scope=\"scope\">\r\n               <el-button\r\n                  size=\"mini\"\r\n                  @click=\"handleEdit(scope.$index, scope.row)\"\r\n                  >编辑</el-button\r\n               >\r\n               <el-button\r\n                  size=\"mini\"\r\n                  type=\"danger\"\r\n                  @click=\"handleDelete(scope.$index, scope.row)\"\r\n                  >删除</el-button\r\n               >\r\n            </template>\r\n         </el-table-column>\r\n         <!-- 搜索部分&&操作部分 ↑↑ -->\r\n      </el-table>\r\n      <!-- 弹窗 -->\r\n\r\n      <!-- 分页 -->\r\n      <el-pagination\r\n         background\r\n         layout=\"prev, pager, next\"\r\n         :total=\"tableData.length\"\r\n         :page-size=\"6\"\r\n         @current-change=\"handleCurrentChange\"\r\n         @size-change=\"handleSizeChange\"\r\n      >\r\n      </el-pagination>\r\n\r\n      <!-- 抽屉 -->\r\n      <el-drawer\r\n      title=\"更新用户信息\"\r\n      :before-close=\"handleClose\"\r\n      :visible.sync=\"dialog\"\r\n      direction=\"rtl\"\r\n      custom-class=\"demo-drawer\"\r\n      ref=\"drawer\"\r\n      style=\"padding:60px;\"\r\n      >  \r\n\r\n      <div style=\"margin:35px;font-size: 17px;\">\r\n         <div>\r\n            <img src=\"\" alt=\"\" style=\"width:80px;height:80px\">\r\n         </div>\r\n         <br>\r\n         <div>\r\n            <el-tag style=\"font-size: 17px;\">userID&nbsp;&nbsp;&nbsp;</el-tag> &nbsp;\r\n            <strong>15518745323</strong>\r\n            \r\n         </div>\r\n         <br>\r\n         <div>\r\n            <div style=\"margin-bottom:10px\">\r\n               用户名:\r\n            </div>\r\n               <el-input v-model=\"newData.userName\" placeholder=\"请输入内容\" style=\"width:360px\"></el-input>\r\n         </div>\r\n         <br>\r\n         <div>\r\n            <el-switch\r\n            style=\"display: block\"\r\n            v-model=\"newData.deleteTag\"\r\n            active-color=\"#13ce66\"\r\n            inactive-color=\"#ff4949\"\r\n            active-text=\"保留\"\r\n            inactive-text=\"删除\">\r\n            </el-switch>\r\n         </div>\r\n         <br>\r\n         <el-button @click=\"cancelForm\">取 消</el-button>\r\n      <el-button type=\"primary\" @click=\"$refs.drawer.closeDrawer()\" :loading=\"loading\">{{ loading ? '提交中 ...' : '确 定' }}</el-button>\r\n   </div>\r\n\r\n</el-drawer>\r\n   </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n   data() {\r\n      return {\r\n         tableData: [],\r\n         search: \"\",\r\n         // 默认显示第几页\r\n         currentPage: 1, // 当前页码\r\n         total: 20, // 总条数\r\n         pageSize: 6, // 每页的数据条数\r\n\r\n         //抽屉\r\n         table: false,\r\n         dialog: false,\r\n         loading: false,\r\n         formLabelWidth: \"80px\",\r\n         timer: null,\r\n         deleteTag: false,\r\n\r\n         //新信息\r\n         newData: {\r\n            userID: \"\",\r\n            userName: \"\",\r\n            time: \"\",\r\n            userImg: \"\",\r\n            userSex: \"\",\r\n            deleteTag: \"\",\r\n         },\r\n\r\n         // 分类信息表单\r\n         value: \"\",\r\n      };\r\n   },\r\n   created() {\r\n      // 获取所有用户信息\r\n      this.$axios\r\n         .get(\"/api/user/backstageselectall\")\r\n         .then((response) => {\r\n            this.tableData = response.data;\r\n            console.log(\"首先获取的信息-->\", this.tableData);\r\n         })\r\n         .catch((error) => {\r\n            console.log(error);\r\n         });\r\n   },\r\n\r\n   methods: {\r\n      //商品种类选择方法\r\n      handleChange(value) {\r\n         console.log(value[0]);\r\n      },\r\n\r\n      // 抽屉方法\r\n      handleClose(done) {\r\n         if (this.loading) {\r\n            return;\r\n         }\r\n         this.$confirm(\"确定要提交表单吗？\")\r\n            .then((_) => {\r\n               this.loading = true;\r\n\r\n               //goodsClassify的数据类型进行修改\r\n               // if (typeof this.newData.goodsClassify === \"object\") {\r\n               //    console.log(\"判断为对象\");\r\n               //    this.newData.goodsClassify = this.newData.goodsClassify[0];\r\n               // }\r\n               // if (this.newData.deleteTag) {\r\n               //    this.newData.deleteTag = \"1\";\r\n               // } else {\r\n               //    this.newData.deleteTag = \"0\";\r\n               // }\r\n\r\n               //更新用户信息\r\n               this.$axios({\r\n                  url: \"/api/goods/backstageUpdataById\",\r\n                  method: \"post\",\r\n                  headers: {\r\n                     \"Content-Type\": \"application/json\",\r\n                  },\r\n                  data: this.newData,\r\n               }).then((respanse) => {\r\n                  console.log(\"更新用户信息结果:--->\", respanse);\r\n                  if (respanse.data == 1) {\r\n                     console.log(\"更新成功\");\r\n                     // this.$route.go(0);\r\n                  }\r\n               });\r\n\r\n               console.log(\"发送请求\");\r\n               this.timer = setTimeout(() => {\r\n                  done();\r\n                  // 动画关闭需要一定的时间\r\n                  setTimeout(() => {\r\n                     this.loading = false;\r\n                  }, 400);\r\n               }, 2000);\r\n            })\r\n            .catch((_) => {});\r\n      },\r\n      cancelForm() {\r\n         this.loading = false;\r\n         this.dialog = false;\r\n         clearTimeout(this.timer);\r\n      },\r\n\r\n      // 消息提示\r\n      open2(message) {\r\n         this.$message({\r\n            message: message,\r\n            type: \"success\",\r\n         });\r\n      },\r\n\r\n      // 弹窗\r\n      open() {\r\n         this.$confirm(\"此操作将永久删除, 是否继续?\", \"提示\", {\r\n            confirmButtonText: \"确定\",\r\n            cancelButtonText: \"取消\",\r\n            type: \"warning\",\r\n         })\r\n            .then(() => {\r\n               this.$message({\r\n                  type: \"success\",\r\n                  message: \"删除成功!\",\r\n               });\r\n            })\r\n            .catch(() => {\r\n               this.$message({\r\n                  type: \"info\",\r\n                  message: \"已取消删除\",\r\n               });\r\n            });\r\n      },\r\n\r\n      handleSizeChange(val) {\r\n         console.log(`每页 ${val} 条`);\r\n         this.currentPage = 1;\r\n         this.pageSize = val;\r\n      },\r\n      handleCurrentChange(val) {\r\n         console.log(`当前页: ${val}`);\r\n         this.currentPage = val;\r\n      },\r\n\r\n      // 显示第几页\r\n      // handleCurrentChange(val) {\r\n      //    console.log(`当前页: ${val}`);\r\n      // },\r\n\r\n      //编辑操作\r\n      handleEdit(index, row) {\r\n         this.dialog = true;\r\n         // this.$router.push({\r\n         //    path: \"/index/GoodsDetail\",\r\n         //    query: { goodsID: row.goodsID },\r\n         // });\r\n         console.log(\"编辑---\", index, row);\r\n\r\n         this.newData.userID = row.userID;\r\n         this.newData.userName = row.userName;\r\n         this.newData.time = row.time;\r\n         this.newData.userImg = row.userImg;\r\n         this.newData.userSex = row.userSex;\r\n         if (row.deleteTag == 1) {\r\n            this.newData.deleteTag = true;\r\n         } else {\r\n            this.newData.deleteTag = false;\r\n         }\r\n      },\r\n\r\n      //删除操作--------------------------------------\r\n      async handleDelete(index, row) {\r\n         console.log(\"======删除=======\");\r\n         console.log(index);\r\n         console.log(row.goodsID);\r\n         console.log(\"======删除=======\");\r\n         const resultConfirm = await this.$confirm(\r\n            \"此操作将修改deleteTag标签为删除,是否继续?\",\r\n            \"删除--deleteTag\",\r\n            {\r\n               confirmButtonText: \"确定\",\r\n               cancelButtonText: \"取消\",\r\n               type: \"warning\",\r\n            }\r\n         ).catch((err) => err);\r\n         // 如果点击的是 确定则resultConfirm 返回的是confirm\r\n         // 否则点击其他的都是返回cancel\r\n         console.log(resultConfirm);\r\n         if (resultConfirm !== \"confirm\") {\r\n            // 取消\r\n            return this.$message.info(\"取消删除\");\r\n         } else {\r\n            this.$axios\r\n               .get(\"/api/goods/backstageDeleteById/\" + row.goodsID)\r\n               .then((response) => {\r\n                  if (response.data == 1) {\r\n                     // 删除成功\r\n                     this.open2(\"删除成功\");\r\n                     for (const item of this.tableData) {\r\n                        if (item.goodsID == row.goodsID) {\r\n                           console.log(item.goodsID);\r\n                           item.deleteTag = false;\r\n                        }\r\n                     }\r\n                  }\r\n               })\r\n               .catch((error) => {\r\n                  console.log(error);\r\n               });\r\n         }\r\n      },\r\n\r\n      // handleDelete(index, row) {\r\n      //    let test = this.open();\r\n      //    console.log(test);\r\n\r\n      //    console.log(index, row);\r\n      // },\r\n   },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.red {\r\n   color: red;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}