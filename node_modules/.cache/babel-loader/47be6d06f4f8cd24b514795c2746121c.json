{"ast":null,"code":"export default {\n  data() {\n    return {\n      goodsList: [],\n      tableData: [],\n      search: \"\",\n      // 默认显示第几页\n      currentPage: 1,\n      // 当前页码\n      total: 20,\n      // 总条数\n      pageSize: 6,\n      // 每页的数据条数\n      //抽屉\n      table: false,\n      dialog: false,\n      loading: false,\n      formLabelWidth: \"80px\",\n      timer: null,\n      deleteTag: false,\n      //新信息\n      newData: {\n        goodsID: \"\",\n        goodsName: \"\",\n        goodsID: \"\",\n        goodsID: \"\"\n      },\n      // 分类信息表单\n      value: \"\",\n      options: [{\n        value: 1,\n        label: \"芒果\"\n      }, {\n        value: 2,\n        label: \"鱼肉\"\n      }, {\n        value: 3,\n        label: \"波罗蜜\"\n      }, {\n        value: 4,\n        label: \"柚子\"\n      }, {\n        value: 5,\n        label: \"橙子\"\n      }, {\n        value: 6,\n        label: \"猕猴桃\"\n      }, {\n        value: 7,\n        label: \"苹果\"\n      }, {\n        value: 8,\n        label: \"草莓\"\n      }, {\n        value: 9,\n        label: \"卷心菜\"\n      }, {\n        value: 10,\n        label: \"西红柿\"\n      }, {\n        value: 11,\n        label: \"黄瓜\"\n      }, {\n        value: 12,\n        label: \"大白菜\"\n      }, {\n        value: 13,\n        label: \"西兰花\"\n      }, {\n        value: 14,\n        label: \"萝卜\"\n      }, {\n        value: 15,\n        label: \"生菜\"\n      }, {\n        value: 16,\n        label: \"金针菇\"\n      }, {\n        value: 17,\n        label: \"大葱\"\n      }, {\n        value: 18,\n        label: \"韭菜\"\n      }, {\n        value: 19,\n        label: \"南瓜\"\n      }, {\n        value: 20,\n        label: \"空心菜\"\n      }]\n    };\n  },\n\n  created() {\n    // 获取商品信息\n    this.$axios.get(\"/api/goods/backstageselectall\").then(response => {\n      this.tableData = response.data;\n      console.log(this.tableData);\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n\n  methods: {\n    //商品种类选择方法\n    handleChange(value) {\n      console.log(value[0]);\n    },\n\n    // 抽屉方法\n    handleClose(done) {\n      if (this.loading) {\n        return;\n      }\n\n      this.$confirm(\"确定要提交表单吗？\").then(_ => {\n        this.loading = true;\n        this.timer = setTimeout(() => {\n          done(); // 动画关闭需要一定的时间\n\n          setTimeout(() => {\n            this.loading = false;\n          }, 400);\n        }, 2000);\n      }).catch(_ => {});\n    },\n\n    cancelForm() {\n      this.loading = false;\n      this.dialog = false;\n      clearTimeout(this.timer);\n    },\n\n    // 弹窗\n    open() {\n      this.$confirm(\"此操作将永久删除, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        this.$message({\n          type: \"success\",\n          message: \"删除成功!\"\n        });\n      }).catch(() => {\n        this.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n\n    handleSizeChange(val) {\n      console.log(`每页 ${val} 条`);\n      this.currentPage = 1;\n      this.pageSize = val;\n    },\n\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`);\n      this.currentPage = val;\n    },\n\n    // 显示第几页\n    // handleCurrentChange(val) {\n    //    console.log(`当前页: ${val}`);\n    // },\n    //编辑操作\n    handleEdit(index, row) {\n      this.dialog = true; // this.$router.push({\n      //    path: \"/index/GoodsDetail\",\n      //    query: { goodsID: row.goodsID },\n      // });\n\n      console.log(index, row);\n    },\n\n    //删除操作\n    async handleDelete(index, row) {\n      console.log(\"======删除=======\");\n      console.log(index);\n      console.log(row.goodsID);\n      console.log(\"======删除=======\");\n      const resultConfirm = await this.$confirm(\"此操作将永久删除该用户, 是否继续?\", \"永久删除用户\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).catch(err => err); // 如果点击的是 确定则resultConfirm 返回的是confirm\n      // 否则点击其他的都是返回cancel\n\n      console.log(resultConfirm);\n\n      if (resultConfirm !== \"confirm\") {\n        // 取消\n        return this.$message.info(\"取消删除\");\n      } else {\n        this.$axios.get(\"/api/goods/backstageDeleteById/\" + row.goodsID).then(response => {\n          console.log(response.data);\n        }).catch(error => {\n          console.log(error);\n        });\n        return this.$message.success(\"删除用户成功\");\n      }\n    } // handleDelete(index, row) {\n    //    let test = this.open();\n    //    console.log(test);\n    //    console.log(index, row);\n    // },\n\n\n  }\n};","map":{"version":3,"mappings":"AAoJA;EACAA;IACA;MACAC,aADA;MAEAC,aAFA;MAGAC,UAHA;MAIA;MACAC,cALA;MAKA;MACAC,SANA;MAMA;MACAC,WAPA;MAOA;MAEA;MACAC,YAVA;MAWAC,aAXA;MAYAC,cAZA;MAaAC,sBAbA;MAcAC,WAdA;MAeAC,gBAfA;MAiBA;MACAC;QACAC,WADA;QAEAC,aAFA;QAGAD,WAHA;QAIAA;MAJA,CAlBA;MAyBA;MACAE,SA1BA;MA2BAC,UACA;QAAAD;QAAAE;MAAA,CADA,EAEA;QAAAF;QAAAE;MAAA,CAFA,EAGA;QAAAF;QAAAE;MAAA,CAHA,EAIA;QAAAF;QAAAE;MAAA,CAJA,EAKA;QAAAF;QAAAE;MAAA,CALA,EAMA;QAAAF;QAAAE;MAAA,CANA,EAOA;QAAAF;QAAAE;MAAA,CAPA,EAQA;QAAAF;QAAAE;MAAA,CARA,EASA;QAAAF;QAAAE;MAAA,CATA,EAUA;QAAAF;QAAAE;MAAA,CAVA,EAWA;QAAAF;QAAAE;MAAA,CAXA,EAYA;QAAAF;QAAAE;MAAA,CAZA,EAaA;QAAAF;QAAAE;MAAA,CAbA,EAcA;QAAAF;QAAAE;MAAA,CAdA,EAeA;QAAAF;QAAAE;MAAA,CAfA,EAgBA;QAAAF;QAAAE;MAAA,CAhBA,EAiBA;QAAAF;QAAAE;MAAA,CAjBA,EAkBA;QAAAF;QAAAE;MAAA,CAlBA,EAmBA;QAAAF;QAAAE;MAAA,CAnBA,EAoBA;QAAAF;QAAAE;MAAA,CApBA;IA3BA;EAkDA,CApDA;;EAqDAC;IACA;IACA,YACAC,GADA,CACA,+BADA,EAEAC,IAFA,CAEAC;MACA;MACAC;IACA,CALA,EAMAC,KANA,CAMAC;MACAF;IACA,CARA;EASA,CAhEA;;EAkEAG;IACA;IACAC;MACAJ;IACA,CAJA;;IAKA;IACAK;MACA;QACA;MACA;;MACA,2BACAP,IADA,CACAQ;QACA;QACA;UACAC,OADA,CAEA;;UACAC;YACA;UACA,CAFA,EAEA,GAFA;QAGA,CANA,EAMA,IANA;MAOA,CAVA,EAWAP,KAXA,CAWAK,OAXA;IAYA,CAtBA;;IAuBAG;MACA;MACA;MACAC;IACA,CA3BA;;IA6BA;IACAC;MACA;QACAC,uBADA;QAEAC,sBAFA;QAGAC;MAHA,GAKAhB,IALA,CAKA;QACA;UACAgB,eADA;UAEAC;QAFA;MAIA,CAVA,EAWAd,KAXA,CAWA;QACA;UACAa,YADA;UAEAC;QAFA;MAIA,CAhBA;IAiBA,CAhDA;;IAkDAC;MACAhB;MACA;MACA;IACA,CAtDA;;IAuDAiB;MACAjB;MACA;IACA,CA1DA;;IA4DA;IACA;IACA;IACA;IAEA;IACAkB;MACA,mBADA,CAEA;MACA;MACA;MACA;;MACAlB;IACA,CAzEA;;IA0EA;IACA;MACAA;MACAA;MACAA;MACAA;MACA,0CACA,oBADA,EAEA,QAFA,EAGA;QACAY,uBADA;QAEAC,sBAFA;QAGAC;MAHA,CAHA,EAQAb,KARA,CAQAkB,UARA,EALA,CAcA;MACA;;MACAnB;;MACA;QACA;QACA;MACA,CAHA,MAGA;QACA,YACAH,GADA,CACA,+CADA,EAEAC,IAFA,CAEAC;UACAC;QACA,CAJA,EAKAC,KALA,CAKAC;UACAF;QACA,CAPA;QASA;MACA;IACA,CA3GA,CA6GA;IACA;IACA;IAEA;IACA;;;EAlHA;AAlEA","names":["data","goodsList","tableData","search","currentPage","total","pageSize","table","dialog","loading","formLabelWidth","timer","deleteTag","newData","goodsID","goodsName","value","options","label","created","get","then","response","console","catch","error","methods","handleChange","handleClose","_","done","setTimeout","cancelForm","clearTimeout","open","confirmButtonText","cancelButtonText","type","message","handleSizeChange","handleCurrentChange","handleEdit","err"],"sourceRoot":"src/views/goods","sources":["GoodsList.vue"],"sourcesContent":["<!-- 用户管理组件 -->\n<template>\n   <div class=\"goodsList\">\n      <el-table\n         :data=\"\n            tableData\n               .slice((currentPage - 1) * pageSize, currentPage * pageSize)\n               .filter(\n                  (data) =>\n                     !search ||\n                     data.name.toLowerCase().includes(search.toLowerCase())\n               )\n         \"\n         style=\"width: 100%\"\n         :row-style=\"{ height: '90px' }\"  \n      >\n         </el-table-column>\n         <el-table-column label=\"goodsID\" prop=\"goodsID\" width=\"80\"> </el-table-column>\n         <el-table-column label=\"卖家ID\" prop=\"userID\"> </el-table-column>\n         <el-table-column label=\"商品名\" prop=\"goodsName\"> </el-table-column>\n         <el-table-column label=\"商品描述\" prop=\"goodsDescribe\" width=\"400\">\n         </el-table-column>\n         <el-table-column label=\"商品分类\" prop=\"goodsClassify\" width=\"100\">\n         </el-table-column>\n         <el-table-column label=\"价格\" prop=\"price\" width=\"100\"> </el-table-column>\n         <el-table-column label=\"是否已售卖\" prop=\"isSell\" width=\"100\"> \n            <template slot-scope=\"scope\">\n               <p>{{scope.row.isSell?'已经卖了':'未售'}}</p>\n            </template>\n         </el-table-column>\n         <el-table-column label=\"是否删除\" prop=\"deleteTag\"><template slot-scope=\"scope\" width=\"100\">\n               <p>{{scope.row.deleteTag?\"未删\":\"已经删除\"}}</p>\n            </template> </el-table-column>\n         <!-- 搜索部分&&操作部分 ↓↓ -->\n         <el-table-column align=\"right\" >\n            <template slot=\"header\" slot-scope=\"scope\">\n               <el-input\n                  v-model=\"search\"\n                  size=\"mini\"\n                  placeholder=\"输入关键字搜索\"\n               />\n            </template>\n            <template slot-scope=\"scope\">\n               <el-button\n                  size=\"mini\"\n                  @click=\"handleEdit(scope.$index, scope.row)\"\n                  >编辑</el-button\n               >\n               <el-button\n                  size=\"mini\"\n                  type=\"danger\"\n                  @click=\"handleDelete(scope.$index, scope.row)\"\n                  >删除</el-button\n               >\n            </template>\n         </el-table-column>\n         <!-- 搜索部分&&操作部分 ↑↑ -->\n      </el-table>\n      <!-- 弹窗 -->\n\n      <!-- 分页 -->\n      <el-pagination\n         background\n         layout=\"prev, pager, next\"\n         :total=\"tableData.length\"\n         :page-size=\"6\"\n         @current-change=\"handleCurrentChange\"\n         @size-change=\"handleSizeChange\"\n      >\n      </el-pagination>\n\n      <!-- 抽屉 -->\n      <el-drawer\n      title=\"更新用户信息\"\n      :before-close=\"handleClose\"\n      :visible.sync=\"dialog\"\n      direction=\"rtl\"\n      custom-class=\"demo-drawer\"\n      ref=\"drawer\"\n      style=\"padding:60px;\"\n      >  \n      <div style=\"margin:35px;font-size: 17px;\">\n\n         <div>\n            <el-tag style=\"font-size: 17px;\">goodsID</el-tag> &nbsp;\n            <strong>1</strong>\n         </div>\n         <br>\n         <div>\n            <el-tag style=\"font-size: 17px;\">userID&nbsp;&nbsp;&nbsp;</el-tag> &nbsp;\n            <strong>15518745323</strong>\n            \n         </div>\n         <br>\n         <div>\n            <div style=\"margin-bottom:10px\">\n               商品名:\n            </div>\n               <el-input v-model=\"newData.goodsID\" placeholder=\"请输入内容\" style=\"width:360px\"></el-input>\n         </div>\n         <br>\n         <div>\n            <div >\n            商品描述:\n\n         </div>\n               <el-input v-model=\"newData.goodsID\" placeholder=\"请输入内容\" style=\"width:400px\"></el-input>\n         </div>\n         <br>\n         <div>\n            商品分类:\n            <div>\n               <el-cascader\n               v-model=\"value\"\n               :options=\"options\"\n               @change=\"handleChange\"\n               ></el-cascader>\n            </div>\n         </div>\n         <br>\n         <div>\n            商品价格:\n            <div>\n\n               <el-input v-model=\"newData.goodsID\" placeholder=\"请输入内容\" style=\"width:300px\"></el-input>\n            </div>\n         </div>\n         <br>\n         <div>\n            <el-switch\n            style=\"display: block\"\n            v-model=\"deleteTag\"\n            active-color=\"#13ce66\"\n            inactive-color=\"#ff4949\"\n            active-text=\"保留\"\n            inactive-text=\"删除\">\n            </el-switch>\n         </div>\n         <br>\n         <el-button @click=\"cancelForm\">取 消</el-button>\n      <el-button type=\"primary\" @click=\"$refs.drawer.closeDrawer()\" :loading=\"loading\">{{ loading ? '提交中 ...' : '确 定' }}</el-button>\n   </div>\n\n</el-drawer>\n   </div>\n</template>\n\n<script>\nexport default {\n   data() {\n      return {\n         goodsList: [],\n         tableData: [],\n         search: \"\",\n         // 默认显示第几页\n         currentPage: 1, // 当前页码\n         total: 20, // 总条数\n         pageSize: 6, // 每页的数据条数\n\n         //抽屉\n         table: false,\n         dialog: false,\n         loading: false,\n         formLabelWidth: \"80px\",\n         timer: null,\n         deleteTag: false,\n\n         //新信息\n         newData: {\n            goodsID: \"\",\n            goodsName: \"\",\n            goodsID: \"\",\n            goodsID: \"\",\n         },\n\n         // 分类信息表单\n         value: \"\",\n         options: [\n            { value: 1, label: \"芒果\" },\n            { value: 2, label: \"鱼肉\" },\n            { value: 3, label: \"波罗蜜\" },\n            { value: 4, label: \"柚子\" },\n            { value: 5, label: \"橙子\" },\n            { value: 6, label: \"猕猴桃\" },\n            { value: 7, label: \"苹果\" },\n            { value: 8, label: \"草莓\" },\n            { value: 9, label: \"卷心菜\" },\n            { value: 10, label: \"西红柿\" },\n            { value: 11, label: \"黄瓜\" },\n            { value: 12, label: \"大白菜\" },\n            { value: 13, label: \"西兰花\" },\n            { value: 14, label: \"萝卜\" },\n            { value: 15, label: \"生菜\" },\n            { value: 16, label: \"金针菇\" },\n            { value: 17, label: \"大葱\" },\n            { value: 18, label: \"韭菜\" },\n            { value: 19, label: \"南瓜\" },\n            { value: 20, label: \"空心菜\" },\n         ],\n      };\n   },\n   created() {\n      // 获取商品信息\n      this.$axios\n         .get(\"/api/goods/backstageselectall\")\n         .then((response) => {\n            this.tableData = response.data;\n            console.log(this.tableData);\n         })\n         .catch((error) => {\n            console.log(error);\n         });\n   },\n\n   methods: {\n      //商品种类选择方法\n      handleChange(value) {\n         console.log(value[0]);\n      },\n      // 抽屉方法\n      handleClose(done) {\n         if (this.loading) {\n            return;\n         }\n         this.$confirm(\"确定要提交表单吗？\")\n            .then((_) => {\n               this.loading = true;\n               this.timer = setTimeout(() => {\n                  done();\n                  // 动画关闭需要一定的时间\n                  setTimeout(() => {\n                     this.loading = false;\n                  }, 400);\n               }, 2000);\n            })\n            .catch((_) => {});\n      },\n      cancelForm() {\n         this.loading = false;\n         this.dialog = false;\n         clearTimeout(this.timer);\n      },\n\n      // 弹窗\n      open() {\n         this.$confirm(\"此操作将永久删除, 是否继续?\", \"提示\", {\n            confirmButtonText: \"确定\",\n            cancelButtonText: \"取消\",\n            type: \"warning\",\n         })\n            .then(() => {\n               this.$message({\n                  type: \"success\",\n                  message: \"删除成功!\",\n               });\n            })\n            .catch(() => {\n               this.$message({\n                  type: \"info\",\n                  message: \"已取消删除\",\n               });\n            });\n      },\n\n      handleSizeChange(val) {\n         console.log(`每页 ${val} 条`);\n         this.currentPage = 1;\n         this.pageSize = val;\n      },\n      handleCurrentChange(val) {\n         console.log(`当前页: ${val}`);\n         this.currentPage = val;\n      },\n\n      // 显示第几页\n      // handleCurrentChange(val) {\n      //    console.log(`当前页: ${val}`);\n      // },\n\n      //编辑操作\n      handleEdit(index, row) {\n         this.dialog = true;\n         // this.$router.push({\n         //    path: \"/index/GoodsDetail\",\n         //    query: { goodsID: row.goodsID },\n         // });\n         console.log(index, row);\n      },\n      //删除操作\n      async handleDelete(index, row) {\n         console.log(\"======删除=======\");\n         console.log(index);\n         console.log(row.goodsID);\n         console.log(\"======删除=======\");\n         const resultConfirm = await this.$confirm(\n            \"此操作将永久删除该用户, 是否继续?\",\n            \"永久删除用户\",\n            {\n               confirmButtonText: \"确定\",\n               cancelButtonText: \"取消\",\n               type: \"warning\",\n            }\n         ).catch((err) => err);\n         // 如果点击的是 确定则resultConfirm 返回的是confirm\n         // 否则点击其他的都是返回cancel\n         console.log(resultConfirm);\n         if (resultConfirm !== \"confirm\") {\n            // 取消\n            return this.$message.info(\"取消删除\");\n         } else {\n            this.$axios\n               .get(\"/api/goods/backstageDeleteById/\" + row.goodsID)\n               .then((response) => {\n                  console.log(response.data);\n               })\n               .catch((error) => {\n                  console.log(error);\n               });\n\n            return this.$message.success(\"删除用户成功\");\n         }\n      },\n\n      // handleDelete(index, row) {\n      //    let test = this.open();\n      //    console.log(test);\n\n      //    console.log(index, row);\n      // },\n   },\n};\n</script>\n\n\n<style>\n</style>\n"]},"metadata":{},"sourceType":"module"}