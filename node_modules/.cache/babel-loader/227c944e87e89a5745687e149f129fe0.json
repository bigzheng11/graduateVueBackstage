{"ast":null,"code":"import Nothing from \"../../components/index/Nothing.vue\";\nexport default {\n  data() {\n    return {\n      goodsList: [],\n      tableData: [],\n      search: \"\",\n      // 默认显示第几页\n      currentPage: 1,\n      // 当前页码\n      total: 20,\n      // 总条数\n      pageSize: 6,\n      // 每页的数据条数\n      //抽屉\n      table: false,\n      dialog: false,\n      loading: false,\n      form: {\n        name: \"\",\n        region: \"\",\n        date1: \"\",\n        date2: \"\",\n        delivery: false,\n        type: [],\n        resource: \"\",\n        desc: \"\"\n      },\n      formLabelWidth: \"80px\",\n      timer: null\n    };\n  },\n\n  created() {\n    // 获取商品信息\n    this.$axios.get(\"/api/goods/backstageselectall\").then(response => {\n      this.tableData = response.data;\n      console.log(this.tableData);\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n\n  methods: {\n    // 抽屉方法\n    handleClose(done) {\n      if (this.loading) {\n        return;\n      }\n\n      this.$confirm(\"确定要提交表单吗？\").then(_ => {\n        this.loading = true;\n        this.timer = setTimeout(() => {\n          done(); // 动画关闭需要一定的时间\n\n          setTimeout(() => {\n            this.loading = false;\n          }, 400);\n        }, 2000);\n      }).catch(_ => {});\n    },\n\n    cancelForm() {\n      this.loading = false;\n      this.dialog = false;\n      clearTimeout(this.timer);\n    },\n\n    // 弹窗\n    open() {\n      this.$confirm(\"此操作将永久删除, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        this.$message({\n          type: \"success\",\n          message: \"删除成功!\"\n        });\n      }).catch(() => {\n        this.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n\n    handleSizeChange(val) {\n      console.log(`每页 ${val} 条`);\n      this.currentPage = 1;\n      this.pageSize = val;\n    },\n\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`);\n      this.currentPage = val;\n    },\n\n    // 显示第几页\n    // handleCurrentChange(val) {\n    //    console.log(`当前页: ${val}`);\n    // },\n    //编辑操作\n    handleEdit(index, row) {\n      this.dialog = true; // this.$router.push({\n      //    path: \"/index/GoodsDetail\",\n      //    query: { goodsID: row.goodsID },\n      // });\n\n      console.log(index, row);\n    },\n\n    //删除操作\n    async handleDelete(index, row) {\n      console.log(\"======删除=======\");\n      console.log(index);\n      console.log(row.goodsID);\n      console.log(\"======删除=======\");\n      const resultConfirm = await this.$confirm(\"此操作将永久删除该用户, 是否继续?\", \"永久删除用户\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).catch(err => err); // 如果点击的是 确定则resultConfirm 返回的是confirm\n      // 否则点击其他的都是返回cancel\n\n      console.log(resultConfirm);\n\n      if (resultConfirm !== \"confirm\") {\n        // 取消\n        return this.$message.info(\"取消删除\");\n      } else {\n        this.$axios.get(\"/api/goods/backstageDeleteById/\" + row.goodsID).then(response => {\n          console.log(response.data);\n        }).catch(error => {\n          console.log(error);\n        });\n        return this.$message.success(\"删除用户成功\");\n      }\n    } // handleDelete(index, row) {\n    //    let test = this.open();\n    //    console.log(test);\n    //    console.log(index, row);\n    // },\n\n\n  },\n  components: {\n    Nothing\n  }\n};","map":{"version":3,"mappings":"AAsFA;AACA;EACAA;IACA;MACAC,aADA;MAEAC,aAFA;MAGAC,UAHA;MAIA;MACAC,cALA;MAKA;MACAC,SANA;MAMA;MACAC,WAPA;MAOA;MAEA;MACAC,YAVA;MAWAC,aAXA;MAYAC,cAZA;MAcAC;QACAC,QADA;QAEAC,UAFA;QAGAC,SAHA;QAIAC,SAJA;QAKAC,eALA;QAMAC,QANA;QAOAC,YAPA;QAQAC;MARA,CAdA;MAwBAC,sBAxBA;MAyBAC;IAzBA;EA2BA,CA7BA;;EA8BAC;IACA;IACA,YACAC,GADA,CACA,+BADA,EAEAC,IAFA,CAEAC;MACA;MACAC;IACA,CALA,EAMAC,KANA,CAMAC;MACAF;IACA,CARA;EASA,CAzCA;;EA2CAG;IACA;IACAC;MACA;QACA;MACA;;MACA,2BACAN,IADA,CACAO;QACA;QACA;UACAC,OADA,CAEA;;UACAC;YACA;UACA,CAFA,EAEA,GAFA;QAGA,CANA,EAMA,IANA;MAOA,CAVA,EAWAN,KAXA,CAWAI,OAXA;IAYA,CAlBA;;IAmBAG;MACA;MACA;MACAC;IACA,CAvBA;;IAyBA;IACAC;MACA;QACAC,uBADA;QAEAC,sBAFA;QAGArB;MAHA,GAKAO,IALA,CAKA;QACA;UACAP,eADA;UAEAsB;QAFA;MAIA,CAVA,EAWAZ,KAXA,CAWA;QACA;UACAV,YADA;UAEAsB;QAFA;MAIA,CAhBA;IAiBA,CA5CA;;IA8CAC;MACAd;MACA;MACA;IACA,CAlDA;;IAmDAe;MACAf;MACA;IACA,CAtDA;;IAwDA;IACA;IACA;IACA;IAEA;IACAgB;MACA,mBADA,CAEA;MACA;MACA;MACA;;MACAhB;IACA,CArEA;;IAsEA;IACA;MACAA;MACAA;MACAA;MACAA;MACA,0CACA,oBADA,EAEA,QAFA,EAGA;QACAW,uBADA;QAEAC,sBAFA;QAGArB;MAHA,CAHA,EAQAU,KARA,CAQAgB,UARA,EALA,CAcA;MACA;;MACAjB;;MACA;QACA;QACA;MACA,CAHA,MAGA;QACA,YACAH,GADA,CACA,+CADA,EAEAC,IAFA,CAEAC;UACAC;QACA,CAJA,EAKAC,KALA,CAKAC;UACAF;QACA,CAPA;QASA;MACA;IACA,CAvGA,CAyGA;IACA;IACA;IAEA;IACA;;;EA9GA,CA3CA;EA2JAkB;IACAC;EADA;AA3JA","names":["data","goodsList","tableData","search","currentPage","total","pageSize","table","dialog","loading","form","name","region","date1","date2","delivery","type","resource","desc","formLabelWidth","timer","created","get","then","response","console","catch","error","methods","handleClose","_","done","setTimeout","cancelForm","clearTimeout","open","confirmButtonText","cancelButtonText","message","handleSizeChange","handleCurrentChange","handleEdit","err","components","Nothing"],"sourceRoot":"src/views/goods","sources":["GoodsList.vue"],"sourcesContent":["<!-- 用户管理组件 -->\n<template>\n   <div class=\"goodsList\">\n      <el-table\n         :data=\"\n            tableData\n               .slice((currentPage - 1) * pageSize, currentPage * pageSize)\n               .filter(\n                  (data) =>\n                     !search ||\n                     data.name.toLowerCase().includes(search.toLowerCase())\n               )\n         \"\n         style=\"width: 100%\"\n         :row-style=\"{ height: '90px' }\"  \n      >\n         </el-table-column>\n         <el-table-column label=\"goodsID\" prop=\"goodsID\" width=\"80\"> </el-table-column>\n         <el-table-column label=\"卖家ID\" prop=\"userID\"> </el-table-column>\n         <el-table-column label=\"商品名\" prop=\"goodsName\"> </el-table-column>\n         <el-table-column label=\"商品描述\" prop=\"goodsDescribe\" width=\"400\">\n         </el-table-column>\n         <el-table-column label=\"商品分类\" prop=\"goodsClassify\" width=\"100\">\n         </el-table-column>\n         <el-table-column label=\"价格\" prop=\"price\" width=\"100\"> </el-table-column>\n         <el-table-column label=\"是否已售卖\" prop=\"isSell\" width=\"100\"> \n            <template slot-scope=\"scope\">\n               <p>{{scope.row.isSell?'已经卖了':'未售'}}</p>\n            </template>\n         </el-table-column>\n         <el-table-column label=\"是否删除\" prop=\"deleteTag\"><template slot-scope=\"scope\" width=\"100\">\n               <p>{{scope.row.deleteTag?\"未删\":\"已经删除\"}}</p>\n            </template> </el-table-column>\n         <!-- 搜索部分&&操作部分 ↓↓ -->\n         <el-table-column align=\"right\" >\n            <template slot=\"header\" slot-scope=\"scope\">\n               <el-input\n                  v-model=\"search\"\n                  size=\"mini\"\n                  placeholder=\"输入关键字搜索\"\n               />\n            </template>\n            <template slot-scope=\"scope\">\n               <el-button\n                  size=\"mini\"\n                  @click=\"handleEdit(scope.$index, scope.row)\"\n                  >编辑</el-button\n               >\n               <el-button\n                  size=\"mini\"\n                  type=\"danger\"\n                  @click=\"handleDelete(scope.$index, scope.row)\"\n                  >删除</el-button\n               >\n            </template>\n         </el-table-column>\n         <!-- 搜索部分&&操作部分 ↑↑ -->\n      </el-table>\n      <!-- 弹窗 -->\n\n      <!-- 分页 -->\n      <el-pagination\n         background\n         layout=\"prev, pager, next\"\n         :total=\"tableData.length\"\n         :page-size=\"6\"\n         @current-change=\"handleCurrentChange\"\n         @size-change=\"handleSizeChange\"\n      >\n      </el-pagination>\n\n      <!-- 抽屉 -->\n      <el-drawer\n      title=\"我嵌套了 Form !\"\n      :before-close=\"handleClose\"\n      :visible.sync=\"dialog\"\n      direction=\"ltr\"\n      custom-class=\"demo-drawer\"\n      ref=\"drawer\"\n      >\n         uID:\n</el-drawer>\n   </div>\n</template>\n\n<script>\nimport Nothing from \"../../components/index/Nothing.vue\";\nexport default {\n   data() {\n      return {\n         goodsList: [],\n         tableData: [],\n         search: \"\",\n         // 默认显示第几页\n         currentPage: 1, // 当前页码\n         total: 20, // 总条数\n         pageSize: 6, // 每页的数据条数\n\n         //抽屉\n         table: false,\n         dialog: false,\n         loading: false,\n\n         form: {\n            name: \"\",\n            region: \"\",\n            date1: \"\",\n            date2: \"\",\n            delivery: false,\n            type: [],\n            resource: \"\",\n            desc: \"\",\n         },\n         formLabelWidth: \"80px\",\n         timer: null,\n      };\n   },\n   created() {\n      // 获取商品信息\n      this.$axios\n         .get(\"/api/goods/backstageselectall\")\n         .then((response) => {\n            this.tableData = response.data;\n            console.log(this.tableData);\n         })\n         .catch((error) => {\n            console.log(error);\n         });\n   },\n\n   methods: {\n      // 抽屉方法\n      handleClose(done) {\n         if (this.loading) {\n            return;\n         }\n         this.$confirm(\"确定要提交表单吗？\")\n            .then((_) => {\n               this.loading = true;\n               this.timer = setTimeout(() => {\n                  done();\n                  // 动画关闭需要一定的时间\n                  setTimeout(() => {\n                     this.loading = false;\n                  }, 400);\n               }, 2000);\n            })\n            .catch((_) => {});\n      },\n      cancelForm() {\n         this.loading = false;\n         this.dialog = false;\n         clearTimeout(this.timer);\n      },\n\n      // 弹窗\n      open() {\n         this.$confirm(\"此操作将永久删除, 是否继续?\", \"提示\", {\n            confirmButtonText: \"确定\",\n            cancelButtonText: \"取消\",\n            type: \"warning\",\n         })\n            .then(() => {\n               this.$message({\n                  type: \"success\",\n                  message: \"删除成功!\",\n               });\n            })\n            .catch(() => {\n               this.$message({\n                  type: \"info\",\n                  message: \"已取消删除\",\n               });\n            });\n      },\n\n      handleSizeChange(val) {\n         console.log(`每页 ${val} 条`);\n         this.currentPage = 1;\n         this.pageSize = val;\n      },\n      handleCurrentChange(val) {\n         console.log(`当前页: ${val}`);\n         this.currentPage = val;\n      },\n\n      // 显示第几页\n      // handleCurrentChange(val) {\n      //    console.log(`当前页: ${val}`);\n      // },\n\n      //编辑操作\n      handleEdit(index, row) {\n         this.dialog = true;\n         // this.$router.push({\n         //    path: \"/index/GoodsDetail\",\n         //    query: { goodsID: row.goodsID },\n         // });\n         console.log(index, row);\n      },\n      //删除操作\n      async handleDelete(index, row) {\n         console.log(\"======删除=======\");\n         console.log(index);\n         console.log(row.goodsID);\n         console.log(\"======删除=======\");\n         const resultConfirm = await this.$confirm(\n            \"此操作将永久删除该用户, 是否继续?\",\n            \"永久删除用户\",\n            {\n               confirmButtonText: \"确定\",\n               cancelButtonText: \"取消\",\n               type: \"warning\",\n            }\n         ).catch((err) => err);\n         // 如果点击的是 确定则resultConfirm 返回的是confirm\n         // 否则点击其他的都是返回cancel\n         console.log(resultConfirm);\n         if (resultConfirm !== \"confirm\") {\n            // 取消\n            return this.$message.info(\"取消删除\");\n         } else {\n            this.$axios\n               .get(\"/api/goods/backstageDeleteById/\" + row.goodsID)\n               .then((response) => {\n                  console.log(response.data);\n               })\n               .catch((error) => {\n                  console.log(error);\n               });\n\n            return this.$message.success(\"删除用户成功\");\n         }\n      },\n\n      // handleDelete(index, row) {\n      //    let test = this.open();\n      //    console.log(test);\n\n      //    console.log(index, row);\n      // },\n   },\n   components: {\n      Nothing,\n   },\n};\n</script>\n\n\n<style>\n</style>\n"]},"metadata":{},"sourceType":"module"}